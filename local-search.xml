<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>线性表顺序存储</title>
    <link href="/2022/10/06/%E7%BA%BF%E6%80%A7%E8%A1%A8%E9%A1%BA%E5%BA%8F%E5%AD%98%E5%82%A8/"/>
    <url>/2022/10/06/%E7%BA%BF%E6%80%A7%E8%A1%A8%E9%A1%BA%E5%BA%8F%E5%AD%98%E5%82%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="线性表的顺序存储"><a href="#线性表的顺序存储" class="headerlink" title="线性表的顺序存储"></a>线性表的顺序存储</h1><ul><li><p>约定俗成的定义</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">define</span> OK 1</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> ERROR 0</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> TRUE 1</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> FALSE 0</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> MAXSIZE 20 <span class="hljs-comment">//此处定义为20</span></span><br><br><span class="hljs-keyword">typedef</span> <span class="hljs-type">int</span> ElemType;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">int</span> Status;<br></code></pre></td></tr></table></figure></li><li><p>结构定义</p></li></ul> <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> &#123;</span><br>    ElemType data[MAXSIZE];<br>    <span class="hljs-type">int</span> length;<br>&#125; SqList;<br></code></pre></td></tr></table></figure><ul><li>读取操作</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c">Status <span class="hljs-title function_">GetElem</span><span class="hljs-params">(SqList L, <span class="hljs-type">int</span> i, ElemType *e)</span> &#123;<br>    <span class="hljs-keyword">if</span>(L.length == <span class="hljs-number">0</span> || i &lt; <span class="hljs-number">1</span> || i &gt; L.length) &#123;<br>            <span class="hljs-keyword">return</span> ERROR;<br>        &#125;<br>    *e = L.data[i - <span class="hljs-number">1</span>];<br>    <br>    <span class="hljs-keyword">return</span> OK;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>并集操作</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">void</span> <span class="hljs-title function_">unionL</span><span class="hljs-params">(List *La, List lb)</span> &#123;<br>    <span class="hljs-type">int</span> La_len, Lb_len, i;<br>    <br>    ElemType e;<br>    La_len = ListLength(*La);<br>    Lb_len = ListLength(Lb);<br>    <br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">1</span>; i &lt;= b; i++) &#123;<br>        GetElem(Lb, i, &amp;e);<br>        <span class="hljs-keyword">if</span>(!LocateElem(*La, e)) &#123;<br>            ListInsert(La, ++La_len. e);<br>        &#125;<br>    &#125;   <br>&#125;<br></code></pre></td></tr></table></figure><ul><li>插入操作</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs c">Status <span class="hljs-title function_">ListInsert</span><span class="hljs-params">(SqList *L, <span class="hljs-type">int</span> i, ElemType e)</span> &#123;<br>        <span class="hljs-type">int</span> k;<br><br>        <span class="hljs-keyword">if</span>(L-&gt;length == MAXSIZE) &#123;<br>                <span class="hljs-keyword">return</span> ERROR;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (i &lt; <span class="hljs-number">1</span> || i &gt; L-&gt;Length + <span class="hljs-number">1</span>) &#123;<br>                <span class="hljs-keyword">return</span> ERROR;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(i &lt;= L-&gt;length) &#123;<br>                <span class="hljs-keyword">for</span>(k = L-&gt;length - <span class="hljs-number">1</span>; k &gt;= i - <span class="hljs-number">1</span>; k--) &#123;<br>                                        L-&gt;data[k + <span class="hljs-number">1</span>] = L-&gt;data[k];<br>                                &#125;<br>        &#125;<br><br>        L-&gt;data[i - <span class="hljs-number">1</span>] = e;<br>        L-&gt;length++;<br><br>        <span class="hljs-keyword">return</span> OK;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>删除操作</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs c">Status <span class="hljs-title function_">ListDelete</span><span class="hljs-params">(SqList *L, <span class="hljs-type">int</span> i, ElemType *e)</span> &#123;<br>        <span class="hljs-type">int</span> k;<br><br>        <span class="hljs-keyword">if</span>(L-&gt;length == <span class="hljs-number">0</span>)<br>                <span class="hljs-keyword">return</span> ERROR;<br>        <span class="hljs-keyword">if</span>(i &lt; <span class="hljs-number">1</span> || i &gt; L-&gt;length)<br>                <span class="hljs-keyword">return</span> ERROR;<br><br>        *e = L-&gt;datap[i - <span class="hljs-number">1</span>];<br><br>        <span class="hljs-keyword">if</span>(i &lt; L-&gt;length) &#123;<br>                <span class="hljs-keyword">for</span>(k = i; k &lt; L-&gt;length; k++) &#123;<br>                        L-&gt;data[k - <span class="hljs-number">1</span>] = L-&gt;data[k];<br>                &#125;<br>        &#125;<br><br>        L-&gt;length--;<br>        <span class="hljs-keyword">return</span> OK;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>数据结构</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>线性表的插入和删除操作</title>
    <link href="/2022/10/05/%E7%BA%BF%E6%80%A7%E8%A1%A8%E7%9A%84%E6%8F%92%E5%85%A5%E5%92%8C%E5%88%A0%E9%99%A4%E6%93%8D%E4%BD%9C/"/>
    <url>/2022/10/05/%E7%BA%BF%E6%80%A7%E8%A1%A8%E7%9A%84%E6%8F%92%E5%85%A5%E5%92%8C%E5%88%A0%E9%99%A4%E6%93%8D%E4%BD%9C/</url>
    
    <content type="html"><![CDATA[<h1 id="线性表的插入和删除操作"><a href="#线性表的插入和删除操作" class="headerlink" title="线性表的插入和删除操作"></a>线性表的插入和删除操作</h1><ul><li><p>插入</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs c">Status <span class="hljs-title function_">ListInsert</span><span class="hljs-params">(SqList *L, <span class="hljs-type">int</span> i, ElemType e)</span> &#123;<br>    <span class="hljs-type">int</span> k;<br>    <br>    <span class="hljs-keyword">if</span>(L-&gt;length == MAXSIZE)<br>        <span class="hljs-keyword">return</span> ERROR;<br>    <span class="hljs-keyword">if</span>(i &lt; <span class="hljs-number">1</span> || i &gt; L-&gt;length + <span class="hljs-number">1</span>)<br>        <span class="hljs-keyword">return</span> ERROR;<br>    <span class="hljs-keyword">if</span>(i &lt;= L-&gt;length) &#123;<br>        <span class="hljs-keyword">for</span>(k = L-&gt;length - <span class="hljs-number">1</span>; k &gt;= i - <span class="hljs-number">1</span>; k--) <br>            L-&gt;data[k + <span class="hljs-number">1</span>] = L-&gt;data[k];<br>    &#125;<br>    <br>L-&gt;data[i - <span class="hljs-number">1</span>] = e;<br>    L-&gt;length++;<br>    <br>    <span class="hljs-keyword">return</span> OK<br>&#125;<br></code></pre></td></tr></table></figure><p>插入的时间复杂度为</p></li><li><p>删除</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs c">Status <span class="hljs-title function_">ListDelete</span><span class="hljs-params">(SqList *L, <span class="hljs-type">int</span> i, ElemType *e)</span> &#123;<br>    <span class="hljs-type">int</span> k;<br>    <br>    <span class="hljs-keyword">if</span>(L-&gt;length == <span class="hljs-number">0</span>)<br>        <span class="hljs-keyword">return</span> ERROR;<br>    <span class="hljs-keyword">if</span>(i &lt; <span class="hljs-number">1</span> || i &gt; L-&gt;length) <br>        <span class="hljs-keyword">return</span> ERROR;<br>    *e = L-&gt;data[i - <span class="hljs-number">1</span>];<br>    <br>    <span class="hljs-keyword">if</span>(i &lt; L-&gt;length) &#123;<br>        <span class="hljs-keyword">for</span>(k = i; k &lt; L-&gt;length; k++)<br>            L-&gt;data[k - <span class="hljs-number">1</span>] = L-&gt;data[k];<br>    &#125;<br>    <br>    L-&gt;length --;<br>    <span class="hljs-keyword">return</span> ok;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>时间复杂度：</p><h6 id="最好情况："><a href="#最好情况：" class="headerlink" title="最好情况："></a>最好情况：</h6><p>如果要插入或删除的元素在最后一个位置，时间复杂度为O(1)</p><h6 id="最坏情况："><a href="#最坏情况：" class="headerlink" title="最坏情况："></a>最坏情况：</h6><p>如果要插入或删除的元素在第一个位置，则要进行n次操作，时间复杂度为O(n)</p><h6 id="平均情况："><a href="#平均情况：" class="headerlink" title="平均情况："></a>平均情况：</h6><p>O((n - 1) &#x2F; 2)</p></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>数据结构</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>text</title>
    <link href="/2022/10/05/text/"/>
    <url>/2022/10/05/text/</url>
    
    <content type="html"><![CDATA[<ul><li>this is a test text</li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/10/04/hello-world/"/>
    <url>/2022/10/04/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
